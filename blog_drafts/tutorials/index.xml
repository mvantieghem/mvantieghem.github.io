<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials | Michelle VanTieghem</title>
    <link>/blog_drafts/tutorials/</link>
      <atom:link href="/blog_drafts/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <description>Tutorials</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Tutorials</title>
      <link>/blog_drafts/tutorials/</link>
    </image>
    
    <item>
      <title>Columbia Psychology Scientific Computing</title>
      <link>/blog_drafts/tutorials/cu_psych_computing/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/blog_drafts/tutorials/cu_psych_computing/</guid>
      <description>&lt;p&gt;As a graduate student at Columbia University, I contributed to the development of tutorials on data cleaning, modeling and visualization in R. These materials have been used in a series of workshops for graduate students and research assistants in psychology and the social sciences. The tutorials are currently maintained by the Columbia Psychology Scientific Computing group.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cu-psych-computing.github.io/cu-psych-comp-tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intro to Coding for Social Scientists in R and python&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cu-psych-computing.github.io/cu-psych-comp-tutorial/R/extraTutorials/ggplotExtra/ggplot_summer2018_part1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Data visualization with ggplot&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;

&lt;a href=&#34;https://cu-psych-computing.github.io/cu-psych-comp-tutorial/R/extraTutorials/tidyverseGuide/tidyguide_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A guided tour of the tidyverse&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
&amp;hellip;and more!&lt;br&gt;
&lt;br&gt;
Click 
&lt;a href=&#34;https://cu-psych-computing.github.io/cu-psych-comp-tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
 for the homepage with the full tutorial repository.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make a website using R and Github pages</title>
      <link>/blog_drafts/tutorials/website_tutorial/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/blog_drafts/tutorials/website_tutorial/</guid>
      <description>&lt;h3 id=&#34;why-make-a-website-using-r-studio-and-github-pages&#34;&gt;Why make a website using R studio and github pages?&lt;/h3&gt;
&lt;p&gt;You&#39;re an R user who is looking to make a professional webpage that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Takes advantage of 
&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo website themes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Doesn&#39;t require learning html or java&lt;/li&gt;
&lt;li&gt;Can be hosted on a free domain 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;(Github Pages)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note: This tutorial assumes that you have basic proficiency using Github, R studio, and github repositories with R projects.&lt;/em&gt;
If you aren&#39;t comfortable with this yet, start 
&lt;a href=&#34;https://happygitwithr.com/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
 instead.&lt;/p&gt;
&lt;p&gt;*Disclaimer: This is meant to be a quick step-by-step guide to generate a webpage from beginning to end. For more a more extensive guide on all things related to using blogdown, see the official 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blogdown documentation&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;part-1-build-your-website&#34;&gt;Part 1: Build your website&lt;/h2&gt;
&lt;h3 id=&#34;11-choose-a-theme-for-your-website&#34;&gt;1.1 Choose a theme for your website&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hugo has a wide array of website themes, which can be found 
&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Themes dictate both the aethetics and the format of a website.&lt;/li&gt;
&lt;li&gt;Choose wisely. Once you start with a certain theme, it&#39;s hard to switch themes later.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;12-use-blogdown-to-generate-a-website-template&#34;&gt;1.2 Use blogdown to generate a website template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Once you&#39;ve chosen a theme, click &amp;ldquo;Homepage&amp;rdquo; on the theme website, which leads you to the owner&#39;s github repository for the theme. We will use this github project (e.g. &amp;ldquo;user/themename&amp;rdquo;) as input to the blogdown::new_website function. Step by step instructions below:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in R studio, install the blogdown package and load the library.&lt;br&gt;
&lt;strong&gt;install.packages(&amp;lsquo;blogdown&amp;rsquo;)&lt;/strong&gt;
&lt;strong&gt;install.packages(&amp;lsquo;hugo&amp;rsquo;)&lt;/strong&gt;
&lt;strong&gt;library(blogdown)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a brand new R project in a &lt;em&gt;new&lt;/em&gt; directory&lt;br&gt;
&lt;strong&gt;File &amp;ndash;&amp;gt; New Project  &amp;ndash;&amp;gt; New directory &amp;ndash;&amp;gt; choose location&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generate a website from the theme template in your R Project.&lt;br&gt;
&lt;strong&gt;blogdown::new_website(theme = &amp;ldquo;user/themename&amp;rdquo;)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;13-edit-content-on-your-website&#34;&gt;1.3 Edit content on your website&lt;/h3&gt;
&lt;p&gt;Every theme has a slightly different setup, but we will walk through the basic overview. You can also read the theme documentation for more details on your chosen theme.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Config and menu files&lt;/strong&gt; contain the backbone structure of your website. Config files designate the url, theme, and title of your website. Menu files designate the &amp;ldquo;widgets&amp;rdquo; or components of your website (which varies by theme). Disclaimer: depending on the theme, these files may be in the main directory or different locations (e.g. in the &amp;ldquo;data&amp;rdquo; or &amp;ldquo;config&amp;rdquo; folders) and might end with either &amp;ldquo;.toml&amp;rdquo; or &amp;ldquo;.yml&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content:&lt;/strong&gt; This is where most of your editing will take place. The organization of this folder will vary depending on your chosen theme, and the files here should coincide with your menu.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Static:&lt;/strong&gt; This is the storage location for any static files that you add to your website. For example, you can add PDF files or images that you link in the content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Themes:&lt;/strong&gt; This stores the necessary code to build the website using your chosen theme. &lt;em&gt;Do not edit!&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public:&lt;/strong&gt; Contains the live website, built from the contents and configurations. &lt;em&gt;Do not edit!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It will take some trial-and-error to figure out how changes in these files correspond to changes in the website. Try making a simple change first, like changing the title of your webpage in the config file, annd see how it changes your webpage. The next step describes how to preview your site.&lt;/p&gt;
&lt;h3 id=&#34;14-preview-your-website-as-you-make-changes&#34;&gt;1.4 Preview your website as you make changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You can see changes live as you save them by rendering the site&lt;br&gt;
&lt;strong&gt;blogdown::serve_site()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The webpage will automatically display in the viewer panel of R studio.&lt;/li&gt;
&lt;li&gt;To see the webpage preview in full size, click &lt;strong&gt;open in a new window&lt;/strong&gt; (on the top left of the Viewer panel) to open it in your browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Do I need to run serve_site() after every change I make?&lt;/em&gt;&lt;br&gt;
It depends. After running it once, the webpage preview will automatically refresh after each time you save changes to existing files, but if you remove or add new widgets, you will need to re-run the command to view those structural changes.&lt;/p&gt;
&lt;h2 id=&#34;part-2-link-the-website-to-github&#34;&gt;Part 2: Link the website to github&lt;/h2&gt;
&lt;p&gt;Before we start, it&#39;s important to explain that there will be 2 separate github repositories for this website. This is because hugo (and many website platforms) separate editable content from your live website content (&amp;lsquo;public&amp;rsquo; folder).&lt;br&gt;
&lt;strong&gt;1. webpage:&lt;/strong&gt; This repository will contain the editable contents of your website, which you already generated in step 1.&lt;br&gt;
&lt;strong&gt;2. username.github.io:&lt;/strong&gt; This repository will be a submodule of the &amp;lsquo;webpage&amp;rsquo; repository. It contains the &amp;lsquo;public&amp;rsquo; folder of your website, and is used to generate your live website on github pages.&lt;/p&gt;
&lt;h3 id=&#34;21-make-a-webpage-repository&#34;&gt;2.1 Make a &amp;lsquo;webpage&amp;rsquo; repository&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;make a new repository on github, and call it &amp;lsquo;webpage&amp;rsquo; or whatever you&#39;d like to call your main website repo. Don&#39;t add anything to the repository yet!&lt;/li&gt;
&lt;li&gt;Copy the &amp;lsquo;clone&amp;rsquo; link for your new repository.&lt;/li&gt;
&lt;li&gt;Open R studio and click File &amp;ndash;&amp;gt; New Project.&lt;/li&gt;
&lt;li&gt;Choose &amp;lsquo;from version control&amp;rsquo; and &amp;lsquo;Github&amp;rsquo; in the project options.&lt;/li&gt;
&lt;li&gt;Create your R project using the copied repository link.&lt;/li&gt;
&lt;li&gt;Then copy the entire contents of your Hugo website into the new R project directory &amp;amp; close your R project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;22-make-the-usernamegithubio-repository-and-add-it-as-a-submodule&#34;&gt;2.2 Make the &amp;lsquo;username.github.io&amp;rsquo; repository and add it as a submodule.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Make a new repository on github called &lt;strong&gt;username.github.io&lt;/strong&gt;. Github pages will automatically generate a webpage from any repository with this specific name, so unfortunately you cannot be creative here!&lt;/li&gt;
&lt;li&gt;Open terminal and navigate to your webpage directory on your local machine:&lt;br&gt;
&lt;strong&gt;cd /your-local-directories/webpage/&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Delete your public repository: &lt;strong&gt;rm -rf public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now we are going to add our &amp;lsquo;username.github.io&amp;rsquo; repository as a submodule of the &amp;lsquo;webpage&amp;rsquo; repository: &lt;strong&gt;submodule add -b master &lt;a href=&#34;https://github.com/username/username.github.io.git&#34;&gt;https://github.com/username/username.github.io.git&lt;/a&gt; public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Next time we serve the site, the &amp;lsquo;username.github.io.git&amp;rsquo; repository will contain the contents of the &amp;lsquo;public&amp;rsquo; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;23-set-your-website-html-address&#34;&gt;2.3 Set your website html address&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open the &lt;strong&gt;config.toml&lt;/strong&gt; file in the home directory of your webpage_hugo R project.&lt;/li&gt;
&lt;li&gt;Replace the baseURL &lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt; with your github page domain: &lt;strong&gt;&lt;a href=&#34;https://username.github.io&#34;&gt;https://username.github.io&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Save the changes to the config.toml file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For additional information and trouble-shooting, see the related 
&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo documentation&lt;/a&gt;
 for hosting websites on github pages.&lt;/p&gt;
&lt;h2 id=&#34;part-3-serve-website&#34;&gt;Part 3: Serve website&lt;/h2&gt;
&lt;h3 id=&#34;31-edit-content-on-your-webpage&#34;&gt;3.1 Edit content on your webpage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open your &amp;lsquo;webpage&amp;rsquo; R project to continue editing content on your website.&lt;/li&gt;
&lt;li&gt;Re-generate the public folder with updated content: &lt;strong&gt;blogdown::serve_site()&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;32-deploy-your-changes-to-the-live-website&#34;&gt;3.2 Deploy your changes to the live website&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Here, we are going to push the changes to the &amp;lsquo;public&amp;rsquo; directory to our &amp;lsquo;username.github.io&amp;rsquo; repository. This step has to be done in terminal, not R studio.&lt;/li&gt;
&lt;li&gt;In terminal, navigate to the public folder of the &amp;lsquo;webpage&amp;rsquo; directory.&lt;br&gt;
&lt;strong&gt;cd webpage/public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Add, commit and push your changes with the following lines of code:&lt;br&gt;
&lt;strong&gt;git add .&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;git commit -m &amp;ldquo;my message here&amp;rdquo;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;git push origin master&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Check your live website updates at &lt;strong&gt;username.github.io&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;33-track-your-content-changes-to-the-website-repository&#34;&gt;3.3 Track your content changes to the website repository&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Here, we are  going to push the changes of the &amp;lsquo;webpage&amp;rsquo; directory to the &amp;lsquo;webpage&amp;rsquo; repository. I prefer to do this using R studio.&lt;/li&gt;
&lt;li&gt;Exclude the &amp;lsquo;public&amp;rsquo; folder from being tracked by adding this line to your .gitignore file: &lt;strong&gt;public/&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Make sure you commit &amp;amp; push the updated .gitignore file too.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You now have a functioning website built with github, R and hugo!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project management with Github and R projects</title>
      <link>/blog_drafts/tutorials/git_and_r/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/blog_drafts/tutorials/git_and_r/</guid>
      <description>&lt;p&gt;Have you ever wondered&amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What are R projects, and why do I need to use them?&lt;/li&gt;
&lt;li&gt;Why is version control important for research projects?&lt;/li&gt;
&lt;li&gt;What tools are available to make github and R more user-friendly to a beginner?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the Tottenham lab at Columbia, I held a workshop for graduate students and research assistants on these topics. The slides can be found 
&lt;a href=&#34;https://github.com/cu-psych-computing/cu-psych-comp-tutorial/tree/gh-pages/R/extraTutorials/github&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;For more details on how to integrate github into your R workflow, check out 
&lt;a href=&#34;https://happygitwithr.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Happy Git and GitHub for the useR&lt;/a&gt;
 by Jenny Bryan.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
