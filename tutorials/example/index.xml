<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Why make a website using R studio and github pages? | Michelle VanTieghem</title>
    <link>/tutorials/example/</link>
      <atom:link href="/tutorials/example/index.xml" rel="self" type="application/rss+xml" />
    <description>Why make a website using R studio and github pages?</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Why make a website using R studio and github pages?</title>
      <link>/tutorials/example/</link>
    </image>
    
    <item>
      <title>Build website</title>
      <link>/tutorials/example/1_build_website/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/tutorials/example/1_build_website/</guid>
      <description>&lt;h2 id=&#34;1-choose-a-theme-for-your-website&#34;&gt;1) Choose a theme for your website&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hugo has a wide array of website themes, which can be found 
&lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
.&lt;/li&gt;
&lt;li&gt;Themes dictate both the aethetics and the format of a website.&lt;/li&gt;
&lt;li&gt;Choose wisely. Once you start with a certain theme, it&#39;s hard to switch themes later.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-use-blogdown-to-generate-a-website-template&#34;&gt;2) Use blogdown to generate a website template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Once you&#39;ve chosen a theme, navigate to the owner&#39;s github repository (&lt;a href=&#34;https://github.com/user/repo)&#34;&gt;https://github.com/user/repo)&lt;/a&gt;. We&#39;re going to build our website using the example template for that theme.&lt;/li&gt;
&lt;li&gt;in R studio, install the blogdown package.&lt;br&gt;
&lt;strong&gt;install.packages(&amp;lsquo;blogdown&amp;rsquo;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Make a new R project.&lt;br&gt;
&lt;strong&gt;File &amp;ndash;&amp;gt; New Project&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Generate a website from the theme template in your R Project.&lt;br&gt;
&lt;strong&gt;blogdown::generate_website (theme = &amp;lsquo;github.io/username/repository/&#39;)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-edit-content-on-your-website&#34;&gt;3) Edit content on your website&lt;/h2&gt;
&lt;p&gt;Every theme has a slightly different setup, but we will walk through the basic overview.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Config:&lt;/strong&gt; contains the backbone structure of your website. The menus.toml file can be edited based on what navigation links you would like to include on your website. In most cases, you do not need to edit the language.toml, config.toml, or params.toml files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content:&lt;/strong&gt; This is where most of your editing will take place. There is a subfolder for each component of your website, and this will vary depending on your chosen theme. For example, each component (or &amp;lsquo;widget&amp;rsquo;) of the home page will be included within the &amp;lsquo;home&amp;rsquo; folder. You can activate/inactivate or edit these .md files to your heart&#39;s content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Static:&lt;/strong&gt; This is the storage location for any static files that you add to your website. For example, you can add PDF files or images that are then linked to in a content page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Themes:&lt;/strong&gt; This stores the necessary code to build the website using your chosen theme. &lt;em&gt;Do not edit!&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public:&lt;/strong&gt; Contains the live website, built from the contents and configurations. &lt;em&gt;Do not edit!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-preview-your-website&#34;&gt;4) Preview your website&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To preview an individual Rmd file:&lt;br&gt;
Click the &lt;strong&gt;Preview&lt;/strong&gt; button at the top of the Rmd file in R studio&lt;/li&gt;
&lt;li&gt;To preview the entire wepage: &lt;strong&gt;blogdown::serve_site()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The webpage will display in the viewer panel of R studio.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;open in a new window&lt;/strong&gt; (on the top left of the Viewer panel) to open the webpage preview in your browser.&lt;/li&gt;
&lt;li&gt;You only need to do this once during a single R session; the webpage preview will refresh after each time you save changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For additional details and trouble-shooting, see the official 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blogdown documentation&lt;/a&gt;
 for making a website using R markdown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Link your website to github</title>
      <link>/tutorials/example/2_link_to_github/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/tutorials/example/2_link_to_github/</guid>
      <description>&lt;p&gt;Before we start, it&#39;s important to explain that there will be 2 separate github repositories for this website. This is because hugo (and many website platforms) separate editable content from your live website content (&amp;lsquo;public&amp;rsquo; folder).&lt;br&gt;
&lt;strong&gt;1. webpage:&lt;/strong&gt; This repository will contain the editable contents of your website, which you already generated in step 1.&lt;br&gt;
&lt;strong&gt;2. username.github.io:&lt;/strong&gt; This repository will be a submodule of the &amp;lsquo;webpage&amp;rsquo; repository. It contains the &amp;lsquo;public&amp;rsquo; folder of your website, and is used to generate your live website on github pages.&lt;/p&gt;
&lt;h2 id=&#34;1-make-a-webpage-repository&#34;&gt;1) Make a &amp;lsquo;webpage&amp;rsquo; repository&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;make a new repository on github, and call it &amp;lsquo;webpage&amp;rsquo; or whatever you&#39;d like to call your main website repo. Don&#39;t add anything to the repository yet!&lt;/li&gt;
&lt;li&gt;Copy the &amp;lsquo;clone&amp;rsquo; link for your new repository.&lt;/li&gt;
&lt;li&gt;Open R studio and click File &amp;ndash;&amp;gt; New Project.&lt;/li&gt;
&lt;li&gt;Choose &amp;lsquo;from version control&amp;rsquo; and &amp;lsquo;Github&amp;rsquo; in the project options.&lt;/li&gt;
&lt;li&gt;Create your R project using the copied repository link.&lt;/li&gt;
&lt;li&gt;Then copy the entire contents of your Hugo website into the new R project directory &amp;amp; close your R project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-make-the-usernamegithubio-repository-and-add-it-as-a-submodule&#34;&gt;2) Make the &amp;lsquo;username.github.io&amp;rsquo; repository and add it as a submodule.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make a new repository on github called &lt;strong&gt;username.github.io&lt;/strong&gt;. Github pages will automatically generate a webpage from any repository with this specific name, so unfortunately you cannot be creative here!&lt;/li&gt;
&lt;li&gt;Open terminal and navigate to your webpage directory on your local machine:&lt;br&gt;
&lt;strong&gt;cd /your-local-directories/webpage/&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Delete your public repository: &lt;strong&gt;rm -rf public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now we are going to add our &amp;lsquo;username.github.io&amp;rsquo; repository as a submodule of the &amp;lsquo;webpage&amp;rsquo; repository: &lt;strong&gt;submodule add -b master &lt;a href=&#34;https://github.com/username/username.github.io.git&#34;&gt;https://github.com/username/username.github.io.git&lt;/a&gt; public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Next time we serve the site, the &amp;lsquo;username.github.io.git&amp;rsquo; repository will contain the contents of the &amp;lsquo;public&amp;rsquo; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-set-your-website-html-address&#34;&gt;3) Set your website html address&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open the &lt;strong&gt;config.toml&lt;/strong&gt; file in the home directory of your webpage_hugo R project.&lt;/li&gt;
&lt;li&gt;Replace the baseURL &lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt; with your github page domain: &lt;strong&gt;&lt;a href=&#34;https://username.github.io&#34;&gt;https://username.github.io&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Save the changes to the config.toml file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For additional information and trouble-shooting, see the related 
&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo documentation&lt;/a&gt;
 for hosting websites on github pages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serve website on github pages</title>
      <link>/tutorials/example/3_serve_site/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/tutorials/example/3_serve_site/</guid>
      <description>&lt;h2 id=&#34;1-edit-content-on-your-webpage&#34;&gt;1) Edit content on your webpage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open your &amp;lsquo;webpage&amp;rsquo; R project to continue editing content on your website.&lt;/li&gt;
&lt;li&gt;Re-generate the public folder with updated content: &lt;strong&gt;blogdown::serve_site()&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-deploy-your-changes-to-the-live-website&#34;&gt;2) Deploy your changes to the live website&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Here, we are going to push the changes to the &amp;lsquo;public&amp;rsquo; directory to our &amp;lsquo;username.github.io&amp;rsquo; repository. This step has to be done in terminal, not R studio.&lt;/li&gt;
&lt;li&gt;In terminal, navigate to the public folder of the &amp;lsquo;webpage&amp;rsquo; directory.&lt;br&gt;
&lt;strong&gt;cd webpage/public&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Add, commit and push your changes with the following lines of code:&lt;br&gt;
&lt;strong&gt;git add .&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;git commit -m &amp;ldquo;my message here&amp;rdquo;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;git push origin master&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Check your live website updates at &lt;strong&gt;username.github.io&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-track-your-content-changes-to-the-website-repository&#34;&gt;3) Track your content changes to the website repository&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Here, we are  going to push the changes of the &amp;lsquo;webpage&amp;rsquo; directory to the &amp;lsquo;webpage&amp;rsquo; repository. I prefer to do this using R studio.&lt;/li&gt;
&lt;li&gt;Exclude the &amp;lsquo;public&amp;rsquo; folder from being tracked by adding this line to your .gitignore file: &lt;strong&gt;public/&lt;/strong&gt;. \&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Make sure you commit &amp;amp; push the updated .gitignore file too.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
